import { useMemo, useState } from 'react';
import { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Select, MenuItem, Button } from '@mui/material';
import { CardContent, Grid, InputLabel, Typography } from '@mui/material';
import { Formik, Form, FieldArray } from 'formik';
import * as yup from 'yup';

// GraphQL.
import useGraphQLQuery from 'hooks/useGraphQLQuery';
//import useGraphQLMutation from 'hooks/useGraphQLMutation';
import ListSupplierOrders from 'graphql/quotes/ListSupplierOrders';

const formikValidationSchema = yup.object().shape({
  supplierorderlist: yup.array().of(
    yup.object().shape({
      sk: yup.string().required('Sk is required'),
      supplier: yup.string().required('Supplier is required')
    })
  )
});

const newRowInitialValue = {
  sk: '',
  supplier: ''
};

const SupplierOrderList = () => {
  const [status, setStatus] = useState(10);
  const handleChange = (e) => {
    setStatus(e.target.value);
  };
  /* Profit and loss calculations */
  const qouteTypeTable = useMemo(() => [
    {
      sno: 1,
      item: 'FENCE',
      product: 'TP 1.65 METRE Code 1 COST',
      qty: '20',
      price: Number(41).toFixed(2),
      supplier: (
        <Select value={status} placeholder="Age" onChange={handleChange} fullWidth>
          <MenuItem value={10}>Aust Laattice & Timber</MenuItem>
          <MenuItem value={20}>Eastside Fencing</MenuItem>
          <MenuItem value={30}>Option 3</MenuItem>
        </Select>
      )
    },
    {
      sno: 2,
      item: 'POSTS',
      product: 'Hardrood 125 x 75mm 2.7m (starter)',
      qty: '1',
      price: Number(55).toFixed(2),
      supplier: (
        <Select value={status} placeholder="Age" onChange={handleChange} fullWidth>
          <MenuItem value={10}>Eastside Fencing</MenuItem>
          <MenuItem value={20}>Aust Laattice & Timber</MenuItem>
          <MenuItem value={30}>Option 3</MenuItem>
        </Select>
      )
    }
  ]);

  /* Render */
  return (
    <CardContent>
      <Grid container columnSpacing={3} alignItems="center" mb={4}>
        <Grid item sm={6}>
          <Typography variant="h4">Quote Type : PAILING</Typography>
        </Grid>
        <Grid item sm={6} container justifyContent={'flex-end'}>
          <Button variant="contained" color="secondary" size="large" onClick={() => formikArrayRef.current.push(newRowInitialValue)}>
            Update Order list from Quote
          </Button>
        </Grid>
      </Grid>
      <Grid container columnSpacing={3} rowSpacing={8}>
        <Grid item xs={12}>
          <TableContainer component={Paper}>
            <Table aria-label="simple table">
              <TableHead>
                <TableRow>
                  <TableCell width={75}>
                    <InputLabel>S/No.</InputLabel>
                  </TableCell>
                  <TableCell>
                    <InputLabel>Item</InputLabel>
                  </TableCell>
                  <TableCell>
                    <InputLabel>PRODUCT</InputLabel>
                  </TableCell>
                  <TableCell align="center">
                    <InputLabel>QTY</InputLabel>
                  </TableCell>
                  <TableCell align="center">
                    <InputLabel>UNIT PRICE</InputLabel>
                  </TableCell>
                  <TableCell>
                    <InputLabel>SUPPLIER</InputLabel>
                  </TableCell>
                </TableRow>
              </TableHead>
              <TableBody>
                {qouteTypeTable.map((row) => (
                  <TableRow key={row.sno} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>
                    <TableCell component="th" scope="row" align="center">
                      <Typography variant="h6">{row.sno}</Typography>
                    </TableCell>
                    <TableCell sx={{ paddingLeft: '12px !important' }}>{row.item}</TableCell>
                    <TableCell>{row.product}</TableCell>
                    <TableCell align="center">{row.qty}</TableCell>
                    <TableCell align="center">{row.price}</TableCell>
                    <TableCell>{row.supplier}</TableCell>
                  </TableRow>
                ))}
              </TableBody>
            </Table>
          </TableContainer>
          <Typography variant="body1" mt={2}>
            The above table is autogenerated from the Quote template
          </Typography>
        </Grid>
      </Grid>
    </CardContent>
  );
};

export default SupplierOrderList;
